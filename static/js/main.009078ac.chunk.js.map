{"version":3,"sources":["data/Aws certs/practitioner.pdf","data/Images/Ppicture.jpg","data/Images/Coding Boot Camp Certificate Program.pdf","data/Images/Richland College.pdf","data/Aws certs/architecture.pdf","data/Aws certs/cloudSecurity.pdf","data/Aws certs/PricingSupport.pdf","data/Images/Quiz.JPG","data/Images/DayPlanner.JPG","data/Images/Eat-Daburger.JPG","data/Images/fitnessTracker.JPG","data/Images/NoteTaker.JPG","data/Images/pwdGenerator.JPG","data/Images/Springboard project.JPG","data/Images/weatherboard.JPG","data/Images/gBooks.JPG","data/Images/EmployeeD.JPG","action.js","constants.js","components/Header.js","components/Vtab.js","components/About.js","components/Mypdf.js","components/Education.js","components/Portofolio.js","components/Contact.js","components/Resume.js","pages/Layout.js","App.js","serviceWorker.js","reducer.js","store.js","index.js"],"names":["module","exports","getTabValue","value","dispatch","getState","type","console","log","payload","getTabValueSuccess","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","options","Header","useDispatch","useState","anchorEl","setAnchorEl","classes","className","AppBar","position","Toolbar","Hidden","smUp","aria-haspopup","onClick","event","currentTarget","id","keepMounted","open","Boolean","onClose","map","option","index","MenuItem","key","handleSelectedItemClick","Typography","variant","Avatar","alt","src","Ppicture","backgroundColor","palette","background","paper","display","height","tabs","borderRight","divider","tab","Vtab","useSelector","gState","tabValue","error","xsDown","Tabs","orientation","onChange","e","Tab","label","marginTop","marginLeft","text","textAlign","fontFamily","fontSize","lineHeight","About","Grid","container","item","sm","Paper","xs","pdfjs","GlobalWorkerOptions","workerSrc","version","Architecture","CloudSecurity","Practitoner","PricingSupport","MyPdf","styles","StyleSheet","create","section","width","color","pdfValue","pdfUrl","setUrl","useEffect","Richland","Bcamp","numPages","setNumPages","pageNumber","file","onLoadSuccess","style","borderSpacing","borderColor","boxShadow","raised","bullet","margin","transform","pos","marginBottom","letterSpacing","certs","cursor","fontWeight","modal","alignItems","justifyContent","objectFit","border","shadows","padding","box","isMobile","window","innerWidth","Education","React","setOpen","pdfOnclick","target","getPdfValueSuccess","Box","Modal","justify","Card","CardHeader","CardContent","activities","DayPlanner","PwdGenerator","NoteTaker","Weather","Quiz","SpringBoard","Burger","fitness","EmpDir","Gbooks","maxWidth","media","Portofolio","Project","CardActionArea","CardMedia","image","ImgSrc","Title","gutterBottom","component","Description","CardActions","Button","size","href","form","flexDirection","date","flexWrap","textField","middle","mwarning","fontStyle","phoneRegExp","DatePickerField","field","other","currentError","errors","name","utils","MomentUtils","clearable","disablePast","format","helperText","onError","setFieldError","setFieldValue","Contact","msgStatus","setMsgStatus","noMsg","setnoMsg","timer","setTimeout","clearTimeout","initialValues","email","phone","startDate","Date","endDate","location","about","validationSchema","Yup","min","max","required","matches","onSubmit","values","setSubmitting","resetForm","alert","JSON","stringify","Axios","post","catch","then","res","status","isSubmitting","FormGroup","as","TextField","msg","InputLabelProps","shrink","multiline","rows","Collapse","in","Alert","severity","disabled","Resume","company","response","reach","Layout","App","hostname","match","initialState","mStatus","store","createStore","state","action","compose","applyMiddleware","thunk","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.009078ac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/practitioner.f3907146.pdf\";","module.exports = __webpack_public_path__ + \"static/media/Ppicture.4e0aedc1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Coding Boot Camp Certificate Program.2c1c1d16.pdf\";","module.exports = __webpack_public_path__ + \"static/media/Richland College.5167b8fe.pdf\";","module.exports = __webpack_public_path__ + \"static/media/architecture.bdfcd7fe.pdf\";","module.exports = __webpack_public_path__ + \"static/media/cloudSecurity.25529b6b.pdf\";","module.exports = __webpack_public_path__ + \"static/media/PricingSupport.00937675.pdf\";","module.exports = __webpack_public_path__ + \"static/media/Quiz.b71f31b7.JPG\";","module.exports = __webpack_public_path__ + \"static/media/DayPlanner.1471039f.JPG\";","module.exports = __webpack_public_path__ + \"static/media/Eat-Daburger.16f5fc14.JPG\";","module.exports = __webpack_public_path__ + \"static/media/fitnessTracker.0a2eed15.JPG\";","module.exports = __webpack_public_path__ + \"static/media/NoteTaker.2365a3f4.JPG\";","module.exports = __webpack_public_path__ + \"static/media/pwdGenerator.84859e69.JPG\";","module.exports = __webpack_public_path__ + \"static/media/Springboard project.c1e211cf.JPG\";","module.exports = __webpack_public_path__ + \"static/media/weatherboard.45447c3f.JPG\";","module.exports = __webpack_public_path__ + \"static/media/gBooks.285043cd.JPG\";","module.exports = __webpack_public_path__ + \"static/media/EmployeeD.a4b3e47c.JPG\";","import {GET_TABVALUE_REQUEST, GET_TABVALUE_SUCCESS, GET_TABVALUE_FAILURE} from \"./constants\"\r\nimport {GET_PDFVALUE_REQUEST, GET_PDFVALUE_SUCCESS, GET_PDFVALUE_FAILURE} from \"./constants\"\r\n\r\n\r\nconst getTabValueSuccess = (value) => ({\r\n    type: GET_TABVALUE_SUCCESS,\r\n    payload: value\r\n  })\r\n  \r\n  const getTabValueFailure = (error) => ({\r\n    type: GET_TABVALUE_FAILURE,\r\n    payload: error\r\n  })\r\n\r\n  export const getTabValue = (value) =>{\r\n      return (dispatch, getState) => {\r\n          dispatch({type: GET_TABVALUE_REQUEST})\r\n          if(!null){\r\n              console.log(\"In actions\", value)\r\n              dispatch(getTabValueSuccess(value))\r\n          }else{\r\n              dispatch(getTabValueFailure())\r\n          }\r\n      }\r\n}\r\n\r\nconst getPdfValueSuccess = (value) => ({\r\n    type: GET_PDFVALUE_SUCCESS,\r\n    payload: value\r\n  })\r\n  \r\n  const getPdfValueFailure = (error) => ({\r\n    type: GET_PDFVALUE_FAILURE,\r\n    payload: error\r\n  })\r\n\r\n  export const getPdfValue = (value) =>{\r\n    return (dispatch, getState) => {\r\n        dispatch({type: GET_PDFVALUE_REQUEST})\r\n        if(!null){\r\n            console.log(\"In actions\", value)\r\n            dispatch(getPdfValueSuccess(value))\r\n        }else{\r\n            dispatch(getTabValueFailure())\r\n        }\r\n    }\r\n}","//GettinG Tab Value\r\nexport const GET_TABVALUE_REQUEST = \"GET_TABVALUE_REQUEST\"\r\nexport const GET_TABVALUE_SUCCESS = \"GET_TABVALUE_SUCCESS\"\r\nexport const GET_TABVALUE_FAILURE = \"GET_TABVALUE_FAILURE\"\r\n\r\nexport const GET_PDFVALUE_REQUEST = \"GET_PDFVALUE_REQUEST\"\r\nexport const GET_PDFVALUE_SUCCESS = \"GET_PDFVALUE_SUCCESS\"\r\nexport const GET_PDFVALUE_FAILURE = \"GET_PDFVALUE_FAILURE\"\r\n\r\n\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch } from \"react-redux\"\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { getTabValue } from '../action';\r\nimport Ppicture from \"../data/Images/Ppicture.jpg\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n})); \r\n\r\nconst options = [\r\n  'About Me',\r\n  'EDUCATION',\r\n  'PORTOFOLIO',\r\n  'Reach Out',\r\n];   \r\n\r\n\r\nexport default function Header() {\r\n  const dispatch = useDispatch()\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    \r\n    const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n\r\n  };\r\n  const handleSelectedItemClick = (event, index) => {\r\n    dispatch(getTabValue(index))\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n    \r\n    const classes = useStyles();\r\n\r\n    return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n         \r\n          <Hidden smUp>\r\n                        <MenuIcon  aria-haspopup=\"true\" onClick={handleClick}/>\r\n                        <Menu\r\n                            id=\"profile-Menu\"\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={handleClose}\r\n                        >\r\n                        {options.map((option, index) =>(\r\n                          <MenuItem\r\n                              key={option}\r\n                              \r\n                              onClick={(event) => handleSelectedItemClick(event, index)}\r\n                          >\r\n                            {option}\r\n                          </MenuItem>\r\n                        ))}\r\n                        </Menu>\r\n               \r\n          </Hidden>\r\n           \r\n        \r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Discover me\r\n          </Typography>\r\n          <Avatar alt=\"Samir Bello\" src={Ppicture} />\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { getTabValue } from '../action';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n        root: {\r\n          flexGrow: 1,\r\n          backgroundColor: theme.palette.background.paper,\r\n          display: 'flex',\r\n          height: 224,\r\n          \r\n        },\r\n        tabs: {\r\n          borderRight: `1px solid ${theme.palette.divider}`,\r\n          \r\n        },\r\n        tab: {\r\n          // position: \"fixed\",\r\n          // left: \"100px\"\r\n\r\n        }\r\n      }));\r\n\r\nexport default function Vtab() {\r\n  const dispatch = useDispatch()\r\n\r\n  const [tabValue, error] = useSelector((gState) => [\r\n    gState.tabValue,\r\n    gState.error\r\n])\r\n\r\n   \r\n    const tabClick = (e, value) => {\r\n        console.log(value)\r\n        dispatch(getTabValue(value))\r\n    }\r\n\r\n  \r\n    \r\n    const classes = useStyles();\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Hidden xsDown>\r\n              <Tabs\r\n                        orientation=\"vertical\"\r\n                        variant=\"scrollable\"\r\n                        value={tabValue}\r\n                        onChange={tabClick}\r\n                        className={classes.tabs}\r\n                      >\r\n                        \r\n                            <Tab label=\"About Me\"/>\r\n                            <Tab label=\"Education\"/>\r\n                            <Tab label=\"Portofolio\"/>\r\n                            <Tab label=\"Reach out\" />\r\n                       \r\n                        \r\n                </Tabs>\r\n\r\n            </Hidden>\r\n\r\n                \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Paper} from \"@material-ui/core\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    root: {\r\n      flexGrow: 1,\r\n      backgroundColor: \"#b5dae9\",\r\n      marginTop: \"17px\",\r\n      marginLeft:\"7px\"\r\n    },\r\n    text: {\r\n        textAlign: \"center\",\r\n        fontFamily: \"Times New Roman, Times, serif\",\r\n        fontSize: \"19px\",\r\n        lineHeight: \"175%\"\r\n    }\r\n  })); \r\n\r\n\r\nexport default function About() {\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={3} className={classes.root}>\r\n                <Grid item sm={6}><h1>I'm Samir</h1>\r\n                        <Paper xs={12}>  \r\n                            <span className={classes.text}>\r\n                        \r\n                        <p >\r\n                        .... and I would like to welcome to my page.\r\n                        I am a junior full stack developper with an enthusiatic attitude towards new challenges.\r\n                        I am looking forward to joining a team where knowledge is nurtured and\r\n                        talent appreciated. \r\n                        </p>\r\n                        <p>\r\n                        Constantly learning new things keeps me enagged and I am hoping to take on the challenge\r\n                        of finding inovative solutions for the many challenges mankind faces. \r\n                        </p>\r\n                        <p>\r\n                        As developers we have a lot to offer the world............ \r\n                        </p>\r\n                        \r\n                    </span>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item sm={6}><h1>Technologies I use</h1>\r\n                    <Paper>\r\n                    <p>Throughout my learning journey I have acquainted myself with many Technologies like\r\n                     <h5>Javascript, HTML, Java, C++</h5>\r\n                      When it comes to databases I can comfortably work in <h5>SQL(MySQL) and noSQL(MongoDb)</h5> databases and would love to learn new ones as well\r\n                     Other technologies I use daily are <h5>CSS, JQuery, Node JS, React, redux, bootStrap, Material UI, GIT and github, express JS</h5>\r\n                     I am also well versed in cloud technoligies(AWS) and continue to enrich my mind with technologies\r\n                     while practicing the one I`ve already learned\r\n                    </p>\r\n                    </Paper>\r\n                    \r\n                </Grid>\r\n            </Grid>\r\n            \r\n        </div>\r\n    )\r\n\r\n\r\n\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport {Document, Page, pdfjs} from 'react-pdf';\r\nimport {StyleSheet} from '@react-pdf/renderer';\r\nimport Bcamp from \"../data/Images/Coding Boot Camp Certificate Program.pdf\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport Richland from \"../data/Images/Richland College.pdf\"\r\nimport Architecture from \"../data/Aws certs/architecture.pdf\"\r\nimport CloudSecurity from \"../data/Aws certs/cloudSecurity.pdf\"\r\nimport Practitoner from \"../data/Aws certs/practitioner.pdf\"\r\nimport PricingSupport from \"../data/Aws certs/PricingSupport.pdf\"\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`\r\n\r\nconst aws = [Architecture, CloudSecurity, Practitoner, PricingSupport]\r\n\r\n\r\nexport default  function MyPdf() {\r\n\r\n  const styles = StyleSheet.create({\r\n    section: {\r\n      '@media screen max-width: 600': {\r\n        width: \"75%\",\r\n        color: \"black\"\r\n      }\r\n    }\r\n  });\r\n\r\n    const [pdfValue, error] = useSelector((gState) => [\r\n        gState.pdfValue,\r\n        gState.error\r\n    ])\r\n    const [pdfUrl, setUrl] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        if (pdfValue === \"Richland\"){\r\n            setUrl(Richland)\r\n            \r\n        }\r\n        else if (pdfValue === \"Bootcamp\"){\r\n            setUrl(Bcamp)\r\n            \r\n        } else if(pdfValue === \"AWS\") {\r\n            \r\n          setUrl(Practitoner)\r\n          \r\n        } else {\r\n          \r\n        }\r\n    }, [pdfUrl])\r\n\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n \r\n  function onDocumentLoadSuccess({ numPages }) {\r\n    setNumPages(numPages);\r\n  }\r\n \r\n  return (\r\n    <div> \r\n      <Document\r\n        file={pdfUrl}\r\n        onLoadSuccess={onDocumentLoadSuccess}\r\n        style={styles.section}\r\n      >\r\n        <Page pageNumber={pageNumber} />\r\n      </Document>\r\n      <p>Page {pageNumber} of {numPages}</p>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport data from \"../data/certs.json\"\r\nimport { CardContent, makeStyles, Modal} from \"@material-ui/core\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Box from '@material-ui/core/Box'\r\nimport Pdf from \"../components/Mypdf\"\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport {getPdfValue} from \"../action\"\r\n\r\nimport \"../App.css\"\r\n\r\nconst certs = data\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n    root: {\r\n        // maxWidth: 345,\r\n        borderSpacing: 10,\r\n        borderColor: \"black\",\r\n        height: 575,  \r\n        backgroundColor: \"lightblue\",\r\n        \r\n        '&:hover': {\r\n            backgroundColor:\"#FFFF66\",\r\n            boxShadow: \"10px 19px 15px lightgreen\",\r\n            raised: true\r\n        }\r\n        \r\n        \r\n\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    text: {\r\n       textAlign: \"left\",\r\n       letterSpacing: \"3px\"\r\n    },\r\n    certs: {\r\n        \r\n        '&:hover': {\r\n            cursor: \"pointer\",\r\n            fontWeight: \"bold\",\r\n        }\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        objectFit: \"cover\",\r\n        marginTop: \"85px\"\r\n        \r\n        \r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    box:{\r\n        width: \"auto\",\r\n        \r\n    },\r\n    \r\n    \r\n    \r\n  }));\r\n\r\n  const isMobile = window.innerWidth;\r\n  console.log(isMobile)\r\n\r\n\r\nexport default function Education() {\r\n    const dispatch = useDispatch()\r\n    const [pdfValue, error] = useSelector((gState) => [\r\n        gState.pdfValue,\r\n        gState.error\r\n    ])\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const pdfOnclick = (e) =>{\r\n        console.log(e.target.title)\r\n        dispatch(getPdfValue(e.target.title))\r\n\r\n\r\n    }\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n      };\r\n    \r\n      const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n\r\n    \r\n\r\n    const classes = useStyles()\r\n    return (\r\n\r\n        <div>\r\n            <Box >\r\n                <Modal open={open} onClose={handleClose} className={classes.modal} >\r\n                            <Pdf/>\r\n                </Modal>\r\n            </Box>\r\n           \r\n           <Grid container spacing={3} justify=\"space-evenly\">\r\n               \r\n               \r\n               \r\n               \r\n            <Grid item sm={4} xs={12}>\r\n                <Card className={classes.root}>\r\n                    <CardHeader title=\"SKILLS\"/>\r\n                    <CardContent>\r\n                                <ul className={classes.text}>\r\n                                    <li>Determined, focused and excellent listener</li>\r\n                                    <li>Enthusiastic team player with strong analytical and problem-solving skills</li>\r\n                                    <li>Excellent communication skills developed through years of team/customer interaction</li>\r\n                                    <li>Excellent verbal and writing skills</li>\r\n                                    <li>Ability to research, design, and write new documentation</li>\r\n                                    <li>Working knowledge of Object oriented programming concepts</li>\r\n                                    <li>AWS cloud practitioner </li>\r\n                                </ul>              \r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>   \r\n           <Grid item sm={4} xs={12}>\r\n           <Card className={classes.root}>\r\n               <CardHeader title=\"Proficiency\"/>\r\n               <CardContent>\r\n                        <ul className={classes.text}>\r\n                            <li>Strong knowledge of JavaScript and JQuery</li>\r\n                            <li>Experience with server side scripting with Node JS</li>\r\n                            <li>Experince with front end libraries such as React</li>\r\n                            <li>Familiarity with Material-UI, react-bootstrap, bootstrap, CSS</li>\r\n                            <li>Understanding of testing requirement and experience using JEST</li>\r\n                            <li>Development experience with SQL and NoSQL Databases</li>\r\n                            <li>Experience using source control management tools such as GIT </li>\r\n                        </ul>              \r\n               </CardContent>\r\n           </Card>\r\n\r\n           </Grid>\r\n           <Grid item sm={4} xs={12}>\r\n           <Card className={classes.root}>\r\n               <CardHeader title=\"Education\"/>\r\n               <CardContent>\r\n                        <ul className={classes.text} onClick={handleOpen} >\r\n                            <li className={classes.certs}  title=\"Bootcamp\" onClick={(e) => {pdfOnclick(e)}}>Graduate of Coding BootCamp UT Austin October 2020</li>\r\n                            <li className={classes.certs} >Student Pursuing Bachelor degree in Computer Science at UT Dallas</li>\r\n                            <li className={classes.certs} title=\"Richland\" onClick={(e) => {pdfOnclick(e)}}>Associate degree in Computer Science (Richland College) May 2019</li>\r\n                            <li className={classes.certs} title=\"AWS\" onClick={(e) => {pdfOnclick(e)}}>Other Training</li>\r\n                        </ul>              \r\n               </CardContent>\r\n           </Card>\r\n\r\n           </Grid>   \r\n            </Grid>            \r\n              \r\n               \r\n           \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Quiz from  \"../data/Images/Quiz.JPG\"\r\nimport DayPlanner from  \"../data/Images/DayPlanner.JPG\"\r\nimport Burger from  \"../data/Images/Eat-Daburger.JPG\"\r\nimport fitness from  \"../data/Images/fitnessTracker.JPG\"\r\nimport NoteTaker from  \"../data/Images/NoteTaker.JPG\"\r\nimport PwdGenerator from  \"../data/Images/pwdGenerator.JPG\"\r\nimport SpringBoard from  \"../data/Images/Springboard project.JPG\"\r\nimport Weather from  \"../data/Images/weatherboard.JPG\"\r\nimport Gbooks from \"../data/Images/gBooks.JPG\"\r\nimport EmpDir from \"../data/Images/EmployeeD.JPG\"\r\n\r\nimport { Grid } from '@material-ui/core';\r\n\r\n\r\n\r\nconsole.log()\r\n\r\nconst activities = [\r\n\r\n    {\r\n        \"Title\": \"Daily Planner App\",\r\n        \"Description\": \"This App uses HTML, JQuery and CSS. Local Storage is also used to store user input\",\r\n        \"ImgSrc\": DayPlanner,\r\n        \"Git Repo\": \"https://github.com/agnide4/dailyPlanner\",\r\n        \"Deployed App\": \"https://agnide4.github.io/dailyPlanner/index.html\",\r\n        \"Project\": false\r\n    },\r\n    {\r\n        \"Title\": \"Password or Token Generator\",\r\n        \"Description\": \"This app generates secure passwords or token based on your specifications. Tools used are HTML, CSS and Jquery\",\r\n        \"ImgSrc\": PwdGenerator,\r\n        \"Git Repo\": \"https://github.com/agnide4/PwdGenerator\",\r\n        \"Deployed App\": \"https://agnide4.github.io/PwdGenerator\",\r\n        \"Project\": false\r\n    },\r\n    {\r\n        \"Title\": \"Note Taker App\",\r\n        \"Description\": \"App lets you keeps track of important notes so you can find them when you need it. Data is stored in a database using SQL\",\r\n        \"ImgSrc\": NoteTaker,\r\n        \"Git Repo\": \"https://github.com/agnide4/note-taker\",\r\n        \"Deployed App\": \"https://cryptic-castle-84608.herokuapp.com\",\r\n        \"Project\": false\r\n    },\r\n    {\r\n        \"Title\": \"Weather app\",\r\n        \"Description\": \"Find weatherforcast for any city around the world. Data is fetched from an Api call using Ajax. Jquery, CSS and HTML are also used\",\r\n        \"ImgSrc\": Weather,\r\n        \"Git Repo\": \"https://agnide4.github.io/weather-app\",\r\n        \"Deployed App\": \"https://github.com/agnide4/weather-app\",\r\n        \"Project\": false\r\n    },\r\n    {\r\n        \"Title\": \"Quiz Taker\",\r\n        \"Description\": \"Use this app to prepare fun quizzes for your classroom and display highest scores in the dashboard. HTML, CSS, Jquery and local storage are tools used for this app\",\r\n        \"ImgSrc\": Quiz,\r\n        \"Git Repo\": \"https://github.com/agnide4/quizredo\",\r\n        \"Deployed App\": \"https://agnide4.github.io/quizredo/\",\r\n        \"Project\": false\r\n    },\r\n    {\r\n        \"Title\": \"SpringBoard\",\r\n        \"Description\": \"This app lets you find event, restaurant and weather forecast in cities accross the US. Data is fected from an API using Ajax, then manipulated with Jquery. Local Storage helps keep track of cities you have searched\",\r\n        \"ImgSrc\": SpringBoard,\r\n        \"Git Repo\": \"https://github.com/agnide4/springboard-app\",\r\n        \"Deployed App\": \"https://agnide4.github.io/springboard-app/\",\r\n        \"Project\": true\r\n    },\r\n    {\r\n        \"Title\": \"Eat da burger\",\r\n        \"Description\": \"This is an Express and SQL app. It mimicks ordering and eating a burger\",\r\n        \"ImgSrc\": Burger,\r\n        \"Git Repo\": \"https://github.com/agnide4/eatdaburger\",\r\n        \"Deployed App\": \"https://burgersam.herokuapp.com/\",\r\n        \"Project\": false\r\n    },\r\n    {\r\n        \"Title\": \"POD APP\",\r\n        \"Description\": \"Education platform where instructors update their content and allow student to watch video content posted by teachers, Project uses React, express, React-bootstrap, Redux, SQL and Bcrypt.\",\r\n        \"ImgSrc\": \"\",\r\n        \"Git Repo\": \"https://github.com/agnide4/POD_APP_v1\",\r\n        \"Deployed App\": \"\",\r\n        \"Project\": true\r\n    },\r\n    {\r\n        \"Title\": \"Fitness Tracker\",\r\n        \"Description\": \"Wanna Burn those Calories? Set your goals and track your milestones using the fitness tracker. Here we use Express, Node JS, MongoDB\",\r\n        \"ImgSrc\": fitness,\r\n        \"Git Repo\": \"https://github.com/agnide4/fitness_tracker\",\r\n        \"Deployed App\": \"https://murmuring-coast-22589.herokuapp.com/\",\r\n        \"Project\": false\r\n    },\r\n    {\r\n        \"Title\": \"Employee Directory\",\r\n        \"Description\": \"This a basic employee directory created using React. Page load app 5 random users and you can search by name, and sort by age. Simple React app - Axios uses for API call\",\r\n        \"ImgSrc\": EmpDir,\r\n        \"Git Repo\": \"https://github.com/agnide4/employee-directory\",\r\n        \"Deployed App\": \"https://agnide4.github.io/employee-directory/#/\",\r\n        \"Project\": false\r\n    },\r\n    {\r\n        \"Title\": \"Google books Seacrh\",\r\n        \"Description\": \"This React based app can search the google books database. Node JS, Axios, MongoDb, React, Redux, React-bootStrap, google Books API\",\r\n        \"ImgSrc\": Gbooks,\r\n        \"Git Repo\": \"https://github.com/agnide4/employee-directory\",\r\n        \"Deployed App\": \"https://vast-garden-25520.herokuapp.com/\",\r\n        \"Project\":false\r\n\r\n    },\r\n    {\r\n        \"Title\": \"Employee Directory\",\r\n        \"Description\": \"NOde JS based employee tracker. Express, SQL, Inquirer, Node and Jquery. This App is not deployed on the web\",\r\n        \"ImgSrc\": \"\",\r\n        \"Git Repo\": \"https://github.com/agnide4/employee-tracker\",\r\n        \"Deployed App\": \"\",\r\n        \"Project\": false\r\n    }\r\n\r\n]\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      maxWidth: 345,\r\n      justifyContent: \"space-around\",\r\n\r\n    },\r\n    media: {\r\n      height: 140,\r\n    },\r\n    display:{\r\n        alignItems:\"center\",\r\n    }\r\n  });\r\n  \r\n\r\n\r\n\r\nexport default function Portofolio() {\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n    return (\r\n\r\n        <Grid container spacing={2} style={{backgroundColor:\"lightgrey\", marginTop:\"07px\", marginLeft:\"15px\"}} className={classes.display}>\r\n            { activities.map((item, id) => (\r\n                item.Project ? (\r\n                        <Grid item xs={12} sm={3}>\r\n                        <Card className={classes.root} key={item.id} raised>\r\n                            <CardActionArea>\r\n                                <CardMedia\r\n                                    className={classes.media}\r\n                                    image= {item.ImgSrc}\r\n                                    title= {item.Title}\r\n                                />\r\n                                <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    {item.Title} <p>GROUP PROJECT</p>\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                    {item.Description}\r\n                                </Typography>\r\n                                </CardContent>\r\n                            </CardActionArea>\r\n                            <CardActions>\r\n                                <Button size=\"small\" color=\"primary\" src={item[\"Git Repo\"]} target=\"_blank\">\r\n                                  Git Repo\r\n                                </Button>\r\n                                <Button size=\"small\" color=\"primary\" src={item[\"Deployed App\"]} target=\"_blank\">\r\n                                  Deployed app\r\n                                </Button>\r\n                            </CardActions>\r\n                            </Card>\r\n                            </Grid>\r\n                    ) : (\r\n                        <Grid item item xs={12} sm={3}>\r\n                        <Card className={classes.root} key={item.id}>\r\n                            <CardActionArea>\r\n                                <CardMedia\r\n                                    className={classes.media}\r\n                                    image={item.ImgSrc}\r\n                                    title= {item.Title}\r\n                                />\r\n                                <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    {item.Title}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                    {item.Description}\r\n                                </Typography>\r\n                                </CardContent>\r\n                            </CardActionArea>\r\n                            <CardActions>\r\n                                <Button size=\"small\" color=\"primary\" href={item[\"Git Repo\"]} target=\"_blank\">\r\n                                  Git Repo\r\n                                </Button>\r\n                                <Button size=\"small\" color=\"primary\" href={item[\"Deployed App\"]} target=\"_blank\">\r\n                                  Deployed app\r\n                                </Button>\r\n                            </CardActions>\r\n                            </Card>\r\n                            </Grid>\r\n                    )\r\n            ))\r\n            }\r\n            \r\n        </Grid>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Button, FormGroup, TextField, Collapse } from '@material-ui/core'\r\nimport { MuiPickersUtilsProvider, KeyboardDateTimePicker } from \"@material-ui/pickers\"\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport Axios from \"axios\"\r\nimport * as Yup from \"yup\"\r\nimport MomentUtils from '@date-io/moment'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      marginLeft: \"10px\",\r\n      marginTop: \"15px\"\r\n    },\r\n    form: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\"\r\n    },\r\n    date: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        marginTop: \"5px\"\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n      },\r\n    middle:{\r\n        background:\"lightgreen\",\r\n        border:\"solid\",\r\n        borderColor:\"black\"\r\n    },\r\n    mwarning:{\r\n        color:\"red\",\r\n        textAlign: \"right\",\r\n        fontStyle: \"italic\",\r\n        fontSize: \"9px\"\r\n        \r\n    }\r\n\r\n  }));\r\n  const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\r\n\r\n\r\n  const DatePickerField = ({ field, form, ...other }) => {\r\n    const currentError = form.errors[field.name];\r\n  \r\n    return (\r\n       <MuiPickersUtilsProvider utils={MomentUtils}>\r\n             <KeyboardDateTimePicker\r\n                    clearable\r\n                    disablePast\r\n                    name={field.name}\r\n                    value={field.value}\r\n                    format=\"ddd, MMMM Do YYYY, h:mm a\"\r\n                    helperText={currentError}\r\n                    error={Boolean(currentError)}\r\n                    onError={error => {\r\n                    // handle as a side effect\r\n                    if (error !== currentError) {\r\n                        form.setFieldError(field.name, error);\r\n                    }\r\n                    }}\r\n                    // if you are using custom validation schema you probably want to pass `true` as third argument\r\n                    onChange={date => form.setFieldValue(field.name, date, true)}\r\n                    {...other}\r\n            />\r\n       </MuiPickersUtilsProvider> \r\n     \r\n    );\r\n  };\r\n  \r\n\r\n\r\n\r\n  \r\nfunction Contact() {\r\n\r\n    const [msgStatus, setMsgStatus] = useState(false)\r\n    const [noMsg, setnoMsg] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n          setMsgStatus(false)\r\n        }, 1000);\r\n        return () => clearTimeout(timer);\r\n      }, [msgStatus]);\r\n\r\n      useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n          setnoMsg(false)\r\n        }, 2000);\r\n        return () => clearTimeout(timer);\r\n      }, [noMsg]);\r\n\r\n\r\n    const classes = useStyles();\r\n    return (\r\n\r\n        <div>\r\n                    <h3>Request a meeting</h3>\r\n                <Formik\r\n                    initialValues={{\r\n                        name: \"\",\r\n                        email: \"\",\r\n                        phone: \"\",\r\n                        startDate: new Date(),\r\n                        endDate: new Date(),\r\n                        location: \"\",\r\n                        about: \"\"\r\n\r\n                    }}\r\n                    validationSchema={Yup.object({\r\n                        name: Yup.string()\r\n                           .min(2, \"Name must be at least 3 characters\")\r\n                           .max(15, \"Max 15 characters permitted\")\r\n                           .required(\"This field is required\"),\r\n                       email: Yup.string()\r\n                           .email(\"Invalid email address\")\r\n                           .required(\"This field is required\"),\r\n                       phone: Yup.string()\r\n                           .required(\"Field is required\")\r\n                           .matches(phoneRegExp, 'Phone number is not valid'),\r\n                        location: Yup.string()\r\n                           .required(\"Location is required\"),\r\n                        startDate: Yup.string().required()\r\n\r\n                    })}\r\n                    onSubmit={(values, {setSubmitting, resetForm}) => {\r\n                        setTimeout(() => {\r\n                          alert(JSON.stringify(values, null, 2));\r\n                            setSubmitting(false);\r\n                            Axios.post(\"/api/meeting\", values)\r\n                                .catch(()=> {\r\n                                    setnoMsg(true)\r\n                                })\r\n                                .then(res => {\r\n                                    if(res.status === 200){\r\n                                        setMsgStatus(true)\r\n                                        resetForm({values:\"\"})\r\n                                    }\r\n                                    \r\n                                })\r\n                                \r\n                        }, 400);\r\n                        \r\n                    }} \r\n                \r\n                \r\n                \r\n                    >\r\n\r\n                {({values, errors, isSubmitting}) => (\r\n                    <Form className={classes.form}>\r\n                        <FormGroup>\r\n                            <Field name=\"name\" label=\"Name\" as={TextField} />\r\n                            <ErrorMessage name=\"name\">{ msg => <div className={classes.mwarning}>{msg}</div> }</ErrorMessage>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Field name=\"email\" label=\"email\" as={TextField} />\r\n                            <ErrorMessage name=\"email\">{ msg => <div className={classes.mwarning}>{msg}</div> }</ErrorMessage>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Field name=\"phone\" label=\"Phone number\" as={TextField} />\r\n                            <ErrorMessage name=\"phone\">{ msg => <div className={classes.mwarning}>{msg}</div> }</ErrorMessage>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                        <Field component={DatePickerField}\r\n                           \r\n                            name=\"startDate\"\r\n                            \r\n                            className={classes.date}\r\n                            InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                        <Field component={DatePickerField}\r\n                           \r\n                            name=\"endDate\"\r\n                            \r\n                            className={classes.date}\r\n                            InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Field name=\"location\" as={TextField} label=\"Location\" />\r\n                            <ErrorMessage name=\"location\">{ msg => <div className={classes.mwarning}>{msg}</div> }</ErrorMessage>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Field name=\"about\" as={TextField} multiline rows={3} variant=\"outlined\" />\r\n                        </FormGroup>\r\n                        <Collapse in={msgStatus}>\r\n                            <Alert severity=\"success\" >Message Sent. Thanks for stopping by!</Alert>\r\n                        </Collapse>\r\n                        <Collapse in={noMsg}>\r\n                            <Alert severity=\"error\">We were unable to process your request. Please try again</Alert>\r\n                        </Collapse>\r\n                     \r\n                        <Button type=\"Submit\" variant=\"outlined\" disabled={isSubmitting} style={{marginTop:\"10px\", color:\"lightblue\", backgroundColor:\"#0047AB\"}}>SUBMIT</Button>\r\n                    </Form>\r\n                    \r\n                )}\r\n                </Formik>\r\n               \r\n\r\n                \r\n             \r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact\r\n","import React, {useState, useEffect} from 'react'\r\nimport { FormControl, Input, FormHelperText, InputLabel, Button, Hidden, FormGroup, Collapse } from '@material-ui/core'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Axios from \"axios\"\r\nimport {Formik, Form, Field, ErrorMessage} from \"formik\"\r\nimport * as Yup from \"yup\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      marginLeft: \"10px\",\r\n      marginTop: \"15px\"\r\n    },\r\n    form: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\"\r\n    },\r\n    date: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        marginTop: \"5px\"\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n      },\r\n    middle:{\r\n        background:\"lightgreen\",\r\n        border:\"solid\",\r\n        borderColor:\"black\"\r\n    },\r\n    mwarning:{\r\n        color:\"red\",\r\n        \r\n    }\r\n  }));\r\n\r\n  \r\n\r\n\r\nfunction Resume() {\r\n    \r\n    const [msgStatus, setMsgStatus] = useState(false)\r\n    const [noMsg, setnoMsg] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n          setMsgStatus(false)\r\n        }, 1000);\r\n        return () => clearTimeout(timer);\r\n      }, [msgStatus]);\r\n\r\n      useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n          setnoMsg(false)\r\n        }, 2000);\r\n        return () => clearTimeout(timer);\r\n      }, [noMsg]);\r\n\r\n\r\n    const classes = useStyles();\r\n    return (\r\n\r\n        <div>\r\n            \r\n            <h3>Email resume as PDF</h3>\r\n                <Formik\r\n                     initialValues={{\r\n                         name: \"\",\r\n                         email: \"\",\r\n                         company: \"\",\r\n                     }}\r\n                     \r\n                     validationSchema={Yup.object({\r\n                         name: Yup.string()\r\n                            .min(2, \"Name must be at least 3 characters\")\r\n                            .max(15, \"Max 15 characters permitted\")\r\n                            .required(\"This field is required\"),\r\n                        email: Yup.string()\r\n                            .email(\"Invalid email address\")\r\n                            .required(\"This field is required\"),\r\n                        company: Yup.string()\r\n                            .required(\"Field is required\")\r\n                            .max(15, \"Max 15 characters permitted\")\r\n\r\n                      \r\n\r\n                     })}\r\n                     onSubmit={(values, {setSubmitting, resetForm}) => {\r\n                        setTimeout(() => {\r\n                          alert(JSON.stringify(values, null, 2));\r\n                          setSubmitting(false);\r\n                          Axios.post(\"/api/resume\", values)\r\n                                .then((response) => {\r\n                                       if(response.status === 200){\r\n                                        setMsgStatus(true)\r\n                                        resetForm({values:\"\"})\r\n                                       }\r\n                                        \r\n                                        \r\n                                })\r\n                                .catch(()=> {\r\n                                    setnoMsg(true)\r\n                                })\r\n                        }, 400);\r\n                        \r\n                    }}              \r\n                     >\r\n                \r\n                {({values, errors, isSubmitting}) => (\r\n                <Form className={classes.form}>\r\n                    \r\n                             <FormGroup >\r\n                                    <Field name=\"name\" label=\"Name\" as={TextField} />\r\n                                    <ErrorMessage name=\"name\">{ msg => <div className={classes.mwarning}>{msg}</div> }</ErrorMessage>\r\n                             </FormGroup>\r\n                             <FormGroup>\r\n                                    <Field name=\"email\" label=\"Email\" as={TextField}/>\r\n                                    {/* {touched.email && errors.email ? errors.email : null} */}\r\n                                    <ErrorMessage name=\"email\">{ msg => <div className={classes.mwarning}>{msg}</div>}</ErrorMessage>\r\n                            </FormGroup>   \r\n                            <FormGroup>\r\n                                    <Field name=\"company\" label=\"Company name\"  as={TextField} />\r\n                                    {/* {touched.company && errors.company ? errors.company : null} */}\r\n                <ErrorMessage name=\"company\">{ msg => <div className={classes.mwarning}>{msg}</div>}</ErrorMessage>\r\n                            </FormGroup>\r\n                            \r\n                            {/* <pre>{JSON.stringify(values, null, 4)}</pre>\r\n                            <pre>{JSON.stringify(errors, null, 4)}</pre> */}\r\n                    <Collapse in={msgStatus}>\r\n                        <Alert severity=\"success\" >Message Sent. Thanks for stopping by!</Alert>\r\n                    </Collapse>\r\n                    <Collapse in={noMsg}>\r\n                        <Alert severity=\"error\">We were unable to process your request. Please try again</Alert>\r\n                    </Collapse>\r\n                     \r\n                     <Button type=\"Submit\"variant=\"outlined\" disabled={isSubmitting} style={{marginTop:\"183px\", color:\"lightblue\", backgroundColor:\"#0047AB\"}} >SUBMIT</Button>    \r\n               </Form>            \r\n            \r\n\r\n                )}\r\n               \r\n        \r\n        </Formik>\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Resume\r\n","import React from 'react'\r\nimport {useSelector} from \"react-redux\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Header from '../components/Header';\r\nimport Vtab from '../components/Vtab';\r\nimport About from \"../components/About\"\r\nimport Education from '../components/Education';\r\nimport Portofolio from '../components/Portofolio';\r\nimport Contact from \"../components/Contact\"\r\nimport Resume from \"../components/Resume\"\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    reach:{\r\n      marginLeft: \"10px\",\r\n      marginTop: \"15px\"\r\n    },\r\n    middle:{\r\n        background:\"lightgreen\",\r\n        border:\"solid\",\r\n        borderColor:\"black\"\r\n    }\r\n\r\n  }));\r\n\r\nexport default function Layout() {\r\n\r\n    const [tabValue, error] = useSelector((gState) => [\r\n        gState.tabValue,\r\n        gState.error\r\n    ])\r\n\r\n    const classes = useStyles();\r\n    \r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <Header />\r\n                </Grid>\r\n                <Grid item container>\r\n                        <Grid item sm={2}> <Vtab /></Grid>\r\n                        <Grid item xs={12} sm={9}>\r\n                            {tabValue === 0 ? (\r\n                                <About />\r\n                            ) : tabValue === 1 ? (\r\n                                <Education />\r\n                            ) : tabValue === 2 ? (\r\n                                <Portofolio />\r\n                            ) : (\r\n                                <Grid container>\r\n                                    <Grid item xs={12} sm={5} style={{marginRight:\"9px\"}}><Resume/></Grid> \r\n                                    <Hidden xsDown>\r\n                                       <Grid item sm={1} className={classes.middle}></Grid>\r\n                                    </Hidden>\r\n                                    <Grid item xs={12} sm={5} style={{marginLeft:\"9px\"}}><Contact/></Grid> \r\n                                </Grid>\r\n                                \r\n                            )}\r\n                        </Grid>\r\n                </Grid>\r\n                \r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\n\nimport Layout from './pages/Layout';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <Layout />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {GET_TABVALUE_REQUEST, GET_TABVALUE_SUCCESS, GET_TABVALUE_FAILURE} from \"./constants\"\r\nimport {GET_PDFVALUE_REQUEST, GET_PDFVALUE_SUCCESS, GET_PDFVALUE_FAILURE} from \"./constants\"\r\n\r\nexport const initialState = {\r\n    tabValue: 0,\r\n    pdfValue:\"\",\r\n    mStatus: false,\r\n    error:\"\"\r\n};\r\n\r\n\r\nexport default (state = initialState, action) => {\r\n  switch(action.type){\r\n    case GET_TABVALUE_REQUEST:\r\n      return{...state, tabValue: 0, error: null}\r\n    case GET_TABVALUE_SUCCESS:\r\n      return{...state, tabValue: action.payload, error: null}\r\n    case GET_TABVALUE_FAILURE:\r\n      return{...state, error: action.payload}\r\n      case GET_PDFVALUE_REQUEST:\r\n        return{...state, pdfValue: \"\", error: null}\r\n      case GET_PDFVALUE_SUCCESS:\r\n        return{...state, pdfValue: action.payload, error: null}\r\n      case GET_PDFVALUE_FAILURE:\r\n        return{...state, error: action.payload}\r\n      \r\n        \r\n\r\n\r\n\r\n    default:\r\n        return state\r\n  }\r\n\r\n\r\n}\r\n  ","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport reducer, { initialState } from './reducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  compose(applyMiddleware(thunk), composeWithDevTools())\r\n);\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store'\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}